[{"path":"https://mohzh143.github.io/lab3pkg/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2025 Mohan Zhang Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Mohan Zhang. Author, maintainer.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Zhang M (2025). lab3pkg: Algorithms Lab 3: Euclidean GCD Dijkstra Shortest Paths. R package version 0.1.0, https://github.com/mohzh143/lab3pkg.","code":"@Manual{,   title = {lab3pkg: Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths},   author = {Mohan Zhang},   year = {2025},   note = {R package version 0.1.0},   url = {https://github.com/mohzh143/lab3pkg}, }"},{"path":"https://mohzh143.github.io/lab3pkg/index.html","id":"lab3pkg","dir":"","previous_headings":"","what":"Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths","title":"Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths","text":"lab3pkg R package created Lab 3 Linköping University. contains implementations classic algorithms supporting datasets.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/index.html","id":"features","dir":"","previous_headings":"","what":"Features","title":"Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths","text":"euclidean(, b) — Compute greatest common divisor (GCD) using Euclidean algorithm. dijkstra(graph, init_node) — Find shortest paths weighted graph. wiki_graph — Example weighted edge list Wikipedia’s Dijkstra example.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths","text":"can install development version lab3pkg GitHub :","code":"# install.packages(\"devtools\") devtools::install_github(\"mohzh143/lab3pkg\")"},{"path":"https://mohzh143.github.io/lab3pkg/index.html","id":"example-usage","dir":"","previous_headings":"","what":"Example usage","title":"Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths","text":"basic examples use functions lab3pkg:","code":"library(lab3pkg)  # Example 1: Euclidean algorithm (GCD) euclidean(100, 1000) ## [1] 100 # Example 2: Dijkstra shortest path dijkstra(wiki_graph, 1) ## [1]  0  7  9 20 20 11"},{"path":"https://mohzh143.github.io/lab3pkg/index.html","id":"license","dir":"","previous_headings":"","what":"License","title":"Algorithms for Lab 3: Euclidean GCD and Dijkstra Shortest Paths","text":"package released MIT license.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/dijkstra.html","id":null,"dir":"Reference","previous_headings":"","what":"Dijkstra Shortest Path — dijkstra","title":"Dijkstra Shortest Path — dijkstra","text":"Dijkstra’s algorithm finds shortest paths single source vertex vertices weighted graph non-negative edge weights.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/dijkstra.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dijkstra Shortest Path — dijkstra","text":"","code":"dijkstra(graph, init_node)"},{"path":"https://mohzh143.github.io/lab3pkg/reference/dijkstra.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Dijkstra Shortest Path — dijkstra","text":"graph data.frame column v1,v2,w init_node numeric scalar start node must exist graph.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/dijkstra.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Dijkstra Shortest Path — dijkstra","text":"Numeric vector distances init_node nodes.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/dijkstra.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Dijkstra Shortest Path — dijkstra","text":"https://en.wikipedia.org/wiki/Dijkstra's_algorithm","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/dijkstra.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dijkstra Shortest Path — dijkstra","text":"","code":"wiki_graph <- data.frame(v1=c(1,1,1,2,2,2,3,3,3,3,4,4,4,5,5,6,6,6),            v2=c(2,3,6,1,3,4,1,2,4,6,2,3,5,4,6,1,3,5),            w=c(7,9,14,7,10,15,9,10,11,2,15,11,6,6,9,14,2,9)) dijkstra(wiki_graph, 1) #> [1]  0  7  9 20 20 11 dijkstra(wiki_graph, 3) #> [1]  9 10  0 11 11  2"},{"path":"https://mohzh143.github.io/lab3pkg/reference/euclidean.html","id":null,"dir":"Reference","previous_headings":"","what":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","title":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","text":"Compute greatest common divisor two integers","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/euclidean.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","text":"","code":"euclidean(a, b)"},{"path":"https://mohzh143.github.io/lab3pkg/reference/euclidean.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","text":", b Numeric scalars","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/euclidean.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","text":"Integer scalar: Greatest Common Divisor b.","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/euclidean.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","text":"https://en.wikipedia.org/wiki/Euclidean_algorithm","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/euclidean.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Greatest Common Divisor (Euclidean Algorithm) — euclidean","text":"","code":"euclidean(123612, 13892347912) #> [1] 4 euclidean(100, 1000) #> [1] 100"},{"path":"https://mohzh143.github.io/lab3pkg/reference/wiki_graph.html","id":null,"dir":"Reference","previous_headings":"","what":"Weighted edge list from Wikipedia example — wiki_graph","title":"Weighted edge list from Wikipedia example — wiki_graph","text":"Weighted edge list Wikipedia example","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/wiki_graph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Weighted edge list from Wikipedia example — wiki_graph","text":"","code":"wiki_graph"},{"path":"https://mohzh143.github.io/lab3pkg/reference/wiki_graph.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Weighted edge list from Wikipedia example — wiki_graph","text":"data frame columns: v1 node (numeric) v2 node (numeric) w Edge weight (non-negative numeric)","code":""},{"path":"https://mohzh143.github.io/lab3pkg/reference/wiki_graph.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Weighted edge list from Wikipedia example — wiki_graph","text":"https://en.wikipedia.org/wiki/Dijkstra's_algorithm","code":""}]
